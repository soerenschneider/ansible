#!/bin/sh

HOST="{{ seedbox_host | default(groups['seedbox'][0]) }}"
LOOT_DIR=loot
LOCAL_MEDIA_FILES=/srv/files/media
REMOTE_INCOMING=/var/lib/transmission/complete
PROMETHEUS_TEXTDIR="${4:-{{ node_exporter_textfile_dir }}}"
LOGFILE="/tmp/lootfetcher.log"

#-------------------
METRICS_PREFIX="lootfetcher"
FILENAME=""
if [ -d $PROMETHEUS_TEXTDIR ]; then
    FILENAME="${PROMETHEUS_TEXTDIR}/lootfetcher.prom"
    if [ -f ${FILENAME} ]; then
        rm -f ${FILENAME}
    fi
fi
#------------------

START_DATE="$(date +%s)"
SIZE_BEFORE=0
FILES_CNT_BEFORE=0

function log {
    echo "$(date "+%Y/%m/%d %H:%M:%S") ${1}" >> ${LOGFILE}
}

function prepare_logfile {
    if [ ! -e ${LOGFILE} ]; then
        set -e
        touch ${LOGFILE}
        set +e
    fi
    cat /dev/null > ${LOGFILE}
    log "Hi, this is lootfetcher"
    chmod 600 ${LOGFILE}
}

function print_metrics {
	echo "${METRICS_PREFIX}_timestamp_seconds $(date +%s)"

	RUNTIME=$(expr $(date +%s) - ${START_DATE})
	echo "${METRICS_PREFIX}_runtime_seconds ${RUNTIME}"

	if [ $SIZE_BEFORE -eq 0 ]; then
	    BYTES_TRANSFERRED=0
	else
	    SIZE_NOW="$(du -bs ${LOCAL_MEDIA_FILES} | awk '{print $1}')"
	    BYTES_TRANSFERRED=$(expr ${SIZE_NOW} - ${SIZE_BEFORE})
        fi
	echo "${METRICS_PREFIX}_transferred_bytes ${BYTES_TRANSFERRED}"

	if [ $FILES_CNT_BEFORE -eq 0 ]; then
	    FILES_TRANSFERRED=0
	else
    	    FILES_CNT_NOW="$(find ${LOCAL_MEDIA_FILES} -type f | wc -l)"
	    FILES_TRANSFERRED=$(expr ${FILES_CNT_NOW} - ${FILES_CNT_BEFORE})
        fi
	echo "${METRICS_PREFIX}_transferred_files_total ${FILES_TRANSFERRED}"

	if [ ${1} = "success" ] || [ ${1} = "no-work" ]; then
	    echo "${METRICS_PREFIX}_success{error=\"none\"} 1"
	else
	    echo "${METRICS_PREFIX}_success{error=\"${1}\"} 0"
	fi
}

prepare_logfile

# run lootcategorizer remotely on the raw incoming remote dir
ssh -o PasswordAuthentication=no -o ChallengeResponseAuthentication=no ${HOST} lootcategorizer ${REMOTE_INCOMING} >> ${LOGFILE} 2>&1
if [ $? -ne 0 ]; then
    print_metrics "lootorganizer-failed" | sponge ${FILENAME}
    exit 1
fi

FILES_TO_SYNC=$(ssh -o PasswordAuthentication=no -o ChallengeResponseAuthentication=no ${HOST} find ${LOOT_DIR}/ -type f | wc -l)

if [ $? -ne 0 ]; then
    print_metrics "find-failed" | sponge ${FILENAME}
fi

if [ ${FILES_TO_SYNC} -eq 0 ]; then
    print_metrics "no-work" | sponge ${FILENAME}
else
    # compute stuff for metrics
    SIZE_BEFORE="$(du -bs ${LOCAL_MEDIA_FILES} | awk '{print $1}')"
    FILES_CNT_BEFORE="$(find ${LOCAL_MEDIA_FILES} -type f | wc -l)"
    
    # copy the just moved files to this machine, deleting on the remote after success
    rsync -a --remove-source-files ${HOST}:${LOOT_DIR}/ ${LOCAL_MEDIA_FILES}/ >> ${LOGFILE}
    if [ $? -ne 0 ]; then
        print_metrics "rsync-failed" | sponge ${FILENAME}
        exit 1
    fi

    # delete all empty dirs inside the remote dir
    ssh ${HOST} find ${LOOT_DIR} -type d -mindepth 1 -empty -delete > /dev/null
    if [ $? -ne 0 ]; then
        print_metrics "delete-failed" | sponge ${FILENAME}
        exit 1
    fi

    print_metrics "success" | sponge ${FILENAME}

    # postprocessing stuff: fix permissions
    find ${LOCAL_MEDIA_FILES} -type f -not -perm 644 -exec chmod 644 {} \;; find ${LOCAL_MEDIA_FILES} -type d -not -perm 755 -exec chmod 755 {} \;
fi
