#!/usr/bin/env bash

METRICS_DIR="{{ node_exporter_textfile_dir | default('/var/lib/node_exporter') }}"
METRIC_NAME="vault_cert_wrapper"
ACMESH_CERT_DIR="/home/{{ acmesh_user | default('acmesh') }}/.acme.sh/{{ inventory_hostname }}"

write_metrics() {
    echo "# TYPE ${METRIC_NAME}_timestamp_seconds gauge" 
    echo "${METRIC_NAME}_timestamp_seconds $(date +%s)" 
    echo "# TYPE ${METRIC_NAME}_exitcode gauge" 
    echo "${METRIC_NAME}_exitcode $1"
}

/usr/local/bin/cert-sync {{ inventory_hostname }} "${ACMESH_CERT_DIR}" {{ vault_dir }}
EXITCODE=$?

if [ -d /etc/haproxy ]; then
    if [ -f "${ACMESH_CERT_DIR}/fullchain.cer" ]; then
        cat "${ACMESH_CERT_DIR}/fullchain.cer" > "/etc/haproxy/{{ inventory_hostname }}.pem"
        cat "${ACMESH_CERT_DIR}/{{ inventory_hostname }}".key >> "/etc/haproxy/{{ inventory_hostname }}.pem"
    else
        cat "${ACMESH_CERT_DIR}/{{ inventory_hostname }}".{cer,key} > "/etc/haproxy/{{ inventory_hostname }}.pem"
    fi
fi

if [ -d "${METRICS_DIR}" ]; then
    write_metrics $EXITCODE > "${METRICS_DIR}/${METRIC_NAME}.prom.tmp"
    mv "${METRICS_DIR}/${METRIC_NAME}.prom.tmp" "${METRICS_DIR}/${METRIC_NAME}.prom"
fi

if [ ${EXITCODE} -eq 2 ]; then
    echo "Notifying vault..."
    pkill -1 ^vault
    systemctl restart haproxy
    exit 0
elif [ ${EXITCODE} -ne 0 ]; then
    exit ${EXITCODE}
fi
