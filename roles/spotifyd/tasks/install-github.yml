---
- name: Check whether spotifyd is installed in desired version
  ansible.builtin.stat:
    path: /usr/local/bin/spotifyd
  register: spotifyd_binary
  tags: [spotifyd, spotifyd-install]

- name: Fetch latest release information from github
  when: spotifyd_version is not defined or spotifyd_version | length == 0
  tags: [spotifyd, spotifyd-install]
  block:
    - name: Set facts
      ansible.builtin.uri:
        url: https://api.github.com/repos/Spotifyd/spotifyd/releases/latest
        return_content: true
      register: github_release
      retries: 3
      delay: 5
      until: github_release is succeeded

    - name: Set facts
      ansible.builtin.set_fact:
        spotifyd_version: "{{ github_release.json.tag_name }}"

- name: Run block
  ansible.builtin.debug:
    msg: Using spotifyd version {{ spotifyd_version }}
  tags: [spotifyd, spotifyd-install]

- name: Download
  when: not spotifyd_binary.stat.exists
  tags: [spotifyd, spotifyd-install]
  block:
    - name: Set facts
      ansible.builtin.set_fact:
        arch: "{{ 'linux' if ansible_architecture == 'x86_64' else 'armhf' if ansible_architecture == 'armv7l' else 'armv6' }}"

    - name: Set facts
      ansible.builtin.set_fact:
        checksum_url: https://github.com/Spotifyd/spotifyd/releases/download/{{ spotifyd_version }}/spotifyd-linux-{{ arch }}-slim.sha512
        archive_url: https://github.com/Spotifyd/spotifyd/releases/download/{{ spotifyd_version }}/spotifyd-linux-{{ arch }}-slim.tar.gz
        archive_local: /tmp/spotifyd-{{ spotifyd_version }}-{{ arch }}.tar.gz

    - name: Set facts
      ansible.builtin.debug:
        msg: "Detected URL: {{ item }}"
      with_items: ["{{ checksum_url }}", "{{ archive_url }}"]

    - name: Set facts
      ansible.builtin.set_fact:
        spotifyd_checksum: "{{ item.split(' ')[0] }}"
      with_items: ["{{ lookup('url', checksum_url) }}"]

    - name: Download and verify spotifyd archive
      become: false
      # checkov:skip=CKV2_ANSIBLE_2:false positive
      ansible.builtin.get_url:
        url: "{{ archive_url }}"
        dest: "{{ archive_local }}"
        checksum: sha512:{{ spotifyd_checksum }}
        mode: "0640"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2

    - name: Unpack binaries from archive
      become: false
      ansible.builtin.unarchive:
        src: "{{ archive_local }}"
        dest: /tmp
        creates: /tmp/spotifyd
        remote_src: true
      check_mode: false

    - name: Copy binaries
      ansible.builtin.copy:
        src: /tmp/spotifyd
        dest: /usr/local/bin/spotifyd-{{ spotifyd_version }}
        remote_src: true
        mode: "0755"
        owner: root
        group: root
      notify: Restart spotifyd

    - name: Delete downloaded files
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      with_items: [/tmp/spotifyd, "{{ archive_local }}"]
