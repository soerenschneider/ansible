---
- name: "Set variables"
  ansible.builtin.set_fact:
    vault_ssh_cli_local_binary: ""
    vault_ssh_cli_installed_version: ""
    vault_ssh_cli_desired_version: "{{ vault_ssh_cli_version | default('') }}"
    vault_ssh_cli_download_archive: ""
    vault_ssh_cli_download_signature: ""
    vault_ssh_cli_stopped_service: ""
    vault_ssh_cli_github_release: ""
    vault_ssh_cli_go_os: ""
    vault_ssh_cli_go_arch: ""
    vault_ssh_cli_checksum_signature_file: ""
    vault_ssh_cli_checksum_file: ""
    vault_ssh_cli_full_filename: ""
    vault_ssh_cli_release_checksum: ""
  tags: [vault-ssh-cli, vault-ssh-cli-install]

- name: Check for existing binary
  ansible.builtin.stat:
    path: /usr/local/bin/{{ binary_name }}
  register: vault_ssh_cli_vault_ssh_cli_local_binary
  tags: [vault-ssh-cli, vault-ssh-cli-install]

- name: Check installed version
  when: vault_ssh_cli_vault_ssh_cli_local_binary.stat.exists
  tags: [vault-ssh-cli, vault-ssh-cli-install]
  block:
    - name: Check installed version
      ansible.builtin.shell: set -o pipefail && /usr/local/bin/{{ binary_name }} version 2>&1 | awk '{print $1}'
      register: vault_ssh_cli_vault_ssh_cli_installed_version
      changed_when: false

    - name: Register local version
      ansible.builtin.set_fact:
        vault_ssh_cli_vault_ssh_cli_installed_version: "{{ vault_ssh_cli_vault_ssh_cli_installed_version.stdout }}"
      changed_when: false

    - name: Print debug information
      ansible.builtin.debug:
        msg: "Installed version: {{ vault_ssh_cli_vault_ssh_cli_installed_version }}"
      changed_when: false

- name: Fetch latest release information from github
  when: vault_ssh_cli_vault_ssh_cli_desired_version is not defined or not vault_ssh_cli_vault_ssh_cli_desired_version
  tags: [vault-ssh-cli, vault-ssh-cli-install]
  block:
    - name: Print debug information
      ansible.builtin.uri:
        url: https://api.github.com/repos/{{ github_repo }}/releases/latest
        return_content: true
      register: vault_ssh_cli_github_release
      retries: 3
      delay: 5

    - name: Set github release
      ansible.builtin.set_fact:
        vault_ssh_cli_vault_ssh_cli_desired_version: "{{ vault_ssh_cli_github_release.json.tag_name }}"
      changed_when: false

    - name: Print latest GitHub version
      ansible.builtin.debug:
        msg: "Latest GitHub version: {{ vault_ssh_cli_vault_ssh_cli_desired_version }}"
      changed_when: false

- name: "Download artifacts"
  when: not vault_ssh_cli_vault_ssh_cli_local_binary.stat.exists or vault_ssh_cli_vault_ssh_cli_desired_version != vault_ssh_cli_vault_ssh_cli_installed_version
  tags: [vault-ssh-cli, vault-ssh-cli-install]
  block:
    - name: Generate temp dir
      become: false
      ansible.builtin.tempfile:
        state: directory
        suffix: "{{ binary_name }}"
      register: vault_ssh_cli_download_dir

    - name: Set vars for generating download link
      ansible.builtin.set_fact:
        vault_ssh_cli_go_os: "{{ ansible_system | lower }}"
        vault_ssh_cli_go_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'armv6' if ansible_architecture == 'armv6l' else 'armv7' if ansible_architecture == 'armv7l' else 'aarch64' if ansible_architecture == 'aarch64' }}"
        vault_ssh_cli_download_dir: "{{ vault_ssh_cli_download_dir.path }}"
        vault_ssh_cli_extraction_dir: "{{ vault_ssh_cli_download_dir.path }}/{{ binary_name }}"
      changed_when: false

    - name: Set filenames
      ansible.builtin.set_fact:
        vault_ssh_cli_checksum_signature_file: "{{ vault_ssh_cli_download_dir }}/{{ binary_name }}-checksums.sha256.sig"
        vault_ssh_cli_checksum_file: "{{ vault_ssh_cli_download_dir }}/{{ binary_name }}-checksums.sha256"
        vault_ssh_cli_full_filename: "{{ binary_name }}-{{ vault_ssh_cli_go_os }}-{{ vault_ssh_cli_go_arch }}"
      changed_when: false

    - name: Get checksum for archive
      ansible.builtin.set_fact:
        vault_ssh_cli_release_checksum: "{{ item.split(' ')[0] }}"
      when: [vault_ssh_cli_full_filename in item, (not vault_ssh_cli_vault_ssh_cli_local_binary.stat.exists or vault_ssh_cli_vault_ssh_cli_installed_version != vault_ssh_cli_vault_ssh_cli_desired_version)]
      with_items: ["{{ lookup('url', 'https://github.com/' + github_repo + '/releases/download/' + vault_ssh_cli_vault_ssh_cli_desired_version + '/checksum.sha256', wantlist=True) | list }}"]

    - name: Download binary
      become: false
      ansible.builtin.get_url:
        url: https://github.com/{{ github_repo }}/releases/download/{{ vault_ssh_cli_vault_ssh_cli_desired_version }}/{{ vault_ssh_cli_full_filename }}
        dest: "{{ vault_ssh_cli_download_dir }}/{{ vault_ssh_cli_full_filename }}"
        checksum: sha256:{{ vault_ssh_cli_release_checksum }}
        mode: "0640"
      register: vault_ssh_cli_download_archive
      until: vault_ssh_cli_download_archive is succeeded
      retries: 5
      delay: 2

    - name: Download release checksum
      become: false
      ansible.builtin.get_url:
        url: https://github.com/{{ github_repo }}/releases/download/{{ vault_ssh_cli_vault_ssh_cli_desired_version }}/checksum.sha256
        dest: "{{ vault_ssh_cli_checksum_file }}"
        mode: "0640"
      register: vault_ssh_cli_vault_ssh_cli_download_signature
      until: vault_ssh_cli_vault_ssh_cli_download_signature is succeeded
      retries: 5
      delay: 2

    - name: Download release checksum signature
      become: false
      ansible.builtin.get_url:
        url: https://github.com/{{ github_repo }}/releases/download/{{ vault_ssh_cli_vault_ssh_cli_desired_version }}/checksum.sha256.sig
        dest: "{{ vault_ssh_cli_checksum_signature_file }}"
        mode: "0640"
      register: vault_ssh_cli_vault_ssh_cli_download_signature
      until: vault_ssh_cli_vault_ssh_cli_download_signature is succeeded
      retries: 5
      delay: 2

    - name: Verify signature
      ansible.builtin.command: signify -V -p /etc/signify/soerenschneider-github.pub -m {{ vault_ssh_cli_checksum_file }}
      changed_when: false

    - name: Stop service
      ansible.builtin.service:
        name: "{{ service_name }}"
        state: stopped
      failed_when: false
      register: vault_ssh_cli_stopped_service

    - name: Copy binaries
      ansible.builtin.copy:
        src: "{{ vault_ssh_cli_download_dir }}/{{ vault_ssh_cli_full_filename }}"
        dest: /usr/local/bin/{{ item }}
        remote_src: true
        mode: "0755"
        owner: root
        group: root
      with_items: ["{{ binary_name }}"]

  always:
    - name: Delete downloaded files
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      with_items: ["{{ vault_ssh_cli_download_dir }}"]
      failed_when: false

    - name: Restart service
      ansible.builtin.service:
        name: "{{ service_name }}"
        state: restarted
      when: vault_ssh_cli_stopped_service is defined and vault_ssh_cli_stopped_service is changed
