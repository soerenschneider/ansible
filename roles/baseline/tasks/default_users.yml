---
- name: Allow passwordless sudo for all 'sudo' group members
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: ^%sudo
    line: "%sudo ALL=(ALL) NOPASSWD: ALL"
    validate: visudo -cf %s
  when: [default_users_passwordless_sudo is defined, default_users_passwordless_sudo]
  tags: [base, default_users]

- name: Add ssh group
  ansible.builtin.group:
    name: ssh
    system: true
  tags: [base, default_users]

- name: Slurp authorized_keys
  ansible.builtin.slurp:
    src: "/home/{{ ansible_user }}/.ssh/authorized_keys"
  register: baseline_ssh_key
  become_user: "{{ ansible_user }}"
  become: false
  tags: [base, default_users]

- name: Fail on missing authorized_key file
  ansible.builtin.fail:
    msg: "No keys found at: {{ lookup('env', 'HOME') }}/.ssh/authorized_keys"
  when: baseline_ssh_key['content'] | length == 0
  tags: [base, default_users]

- name: "Create group and add user to group"
  when: baseline_default_users_groups is not defined or baseline_default_users_groups | length == 0
  tags: [base, default_users]
  block:
    - name: Create group {{ baseline_default_users_name }}
      ansible.builtin.group:
        name: "{{ baseline_default_users_name }}"

    - name: Set default groups our user belongs to
      ansible.builtin.set_fact:
        baseline_default_users_groups: ["{{ baseline_default_users_name }}", adm, sudo, ssh]

- name: Create group {{ baseline_default_users_name }}
  ansible.builtin.group:
    name: "{{ baseline_default_users_name }}"
  tags: [base, default_users]

- name: Create user {{ baseline_default_users_name }}
  ansible.builtin.user:
    name: "{{ baseline_default_users_name }}"
    group: "{{ baseline_default_users_group | default(baseline_default_users_name) }}"
    groups: "{{ baseline_default_users_groups }}"
    shell: "{{ baseline_default_users_shell | default('/bin/bash') }}"
    append: true
  register: baseline_user_created
  tags: [base, default_users]

- name: Set authorized_keys
  ansible.posix.authorized_key:
    user: "{{ baseline_default_users_name }}"
    key: "{{ baseline_ssh_key['content'] | b64decode }}"
  tags: [base, default_users]

- name: Remember old user name
  ansible.builtin.set_fact:
    baseline_old_user: "{{ ansible_user }}"
  tags: [base, default_users]

- name: Reset ansible user
  ansible.builtin.set_fact:
    ansible_user: "{{ baseline_default_users_name }}"
  when: [baseline_default_users_name is defined, baseline_default_users_name | length > 0]
  tags: [base, default_users]

- name: Reboot on changed user
  ansible.builtin.reboot:
  when: baseline_user_created is changed  # noqa: no-handler
  tags: [base, default_users]

- name: "Delete old user and group"
  when: [baseline_old_user != "root", baseline_default_users_name is defined, baseline_default_users_name | length > 0]
  tags: [base, default_users]
  block:
    - name: Delete old user
      ansible.builtin.user:
        name: "{{ baseline_old_user }}"
        state: absent
        force: true

    - name: Delete old user group
      ansible.builtin.group:
        name: "{{ baseline_old_user }}"
        state: absent
