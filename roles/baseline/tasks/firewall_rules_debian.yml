---
- name: Set facts
  ansible.builtin.set_fact:
    firewall_rules: "{{ [{'from': ['any'], 'ports': [22], 'proto': 'tcp'}] + firewall_rules | default([]) }}"  # noqa: var-naming[no-role-prefix]
  tags: [firewall, always]

- name: Collect TCP rules
  ansible.builtin.set_fact:
    fw_tcp_rules: "{{ fw_tcp_rules | default([]) + [ item.ports | product(item.from | default(['any'])) | list ] }}"  # noqa: var-naming[no-role-prefix]
  loop: "{{ firewall_rules | selectattr('proto', 'equalto', 'tcp') | list }}"
  tags: [firewall, always]

- name: Collect UDP rules
  ansible.builtin.set_fact:
    fw_udp_rules: "{{ fw_udp_rules | default([]) + [ item.ports | product(item.from | default(['any'])) | list ] }}"  # noqa: var-naming[no-role-prefix]
  loop: "{{ firewall_rules | selectattr('proto', 'equalto', 'udp') | list }}"
  tags: [firewall, always]

- name: Configure UFW firewall
  tags: [firewall, always]
  when: baseline_enable_firewall | default(true)
  block:
    - name: Reset firewall
      community.general.ufw:
        state: reset

    - name: Allow TCP rules
      community.general.ufw:
        rule: allow
        port: "{{ item.0 }}"
        src: "{{ item.1 }}"
        proto: tcp
      loop: "{{ fw_tcp_rules | flatten(levels=1) }}"

    - name: Allow UDP rules
      community.general.ufw:
        rule: allow
        port: "{{ item.0 }}"
        src: "{{ item.1 }}"
        proto: udp
      loop: "{{ fw_udp_rules | default([]) | flatten(levels=1) }}"

    - name: Set default ingress policy to reject
      community.general.ufw:
        state: enabled
        default: reject
        direction: incoming
        logging: low
