---
- name: Confine login to mandatory ssh system group
  ansible.builtin.group:
    name: "{{ ssh_users_group }}"
    system: true
    state: present
  tags: [ssh, base]

- name: Add current user to empty list ssh_users
  ansible.builtin.set_fact:
    ssh_users: ["{{ ansible_user }}"]
  when: ssh_users | length == 0
  tags: [ssh, base]

- name: Add ssh users to the group of allowed ssh users
  ansible.builtin.user:
    name: "{{ item }}"
    groups: "{{ ssh_users_group }}"
    append: true
  with_items: "{{ ssh_users }}"
  tags: [ssh, base]

- name: Add 2fa users to the group of allowed ssh users
  ansible.builtin.user:
    name: "{{ item }}"
    groups: "{{ ssh_users_group }}"
    append: true
  with_items: "{{ ssh_2fa_users }}"
  tags: [ssh, base]

- name: Only allow people in the ssh group to login
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?AllowGroups
    line: AllowGroups {{ ssh_users_group }}
  notify: Restart_sshd
  tags: [ssh, base]

- name: Assemble AuthenticationMethods (Linux)
  ansible.builtin.set_fact:
    auth_methods: "{% if ssh_2fa_enabled and ssh_force_pubkey_and_2fa %}publickey,keyboard-interactive{% else %}publickey{% endif %}"
  when: ansible_system == "Linux"
  tags: [ssh, base]

- name: Assemble AuthenticationMethods (OpenBSD)
  ansible.builtin.set_fact:
    auth_methods: "{% if ssh_2fa_enabled and ssh_force_pubkey_and_2fa %}publickey,password{% else %}publickey{% endif %}"
  when: ansible_system == "OpenBSD"
  tags: [ssh, base]

- name: Set 'AuthenticationMethods {{ auth_methods }}'
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?AuthenticationMethods
    line: AuthenticationMethods {{ auth_methods }}
  notify: Restart_sshd
  tags: [ssh, base]

- name: Set PubkeyAuthentication
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?PubkeyAuthentication
    line: PubkeyAuthentication yes
  notify: Restart_sshd
  tags: [ssh, base]

- name: Set PasswordAuthentication
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?PasswordAuthentication
    # To use 2fa on OpenBSD, the value has to be set to yes
    line: PasswordAuthentication {% if ansible_system == 'OpenBSD' and ssh_2fa_enabled %}yes{% else %}no{% endif %}
  notify: Restart_sshd
  tags: [ssh, base]

- name: Set challenge response auth
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?ChallengeResponseAuthentication
    # Conversely, to use 2fa on Linux, this value has to be set to yes
    line: ChallengeResponseAuthentication {% if ansible_system == 'Linux' and ssh_2fa_enabled %}yes{% else %}no{% endif %}
  notify: Restart_sshd
  tags: [ssh, base]

- name: Disable root logins
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?PermitRootLogin
    line: PermitRootLogin no
  notify: Restart_sshd
  when: ansible_user != "root"
  tags: [ssh, base]

- name: Disable GSSAPI auth
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#?GSSAPIAuthentication
    line: GSSAPIAuthentication no
  when: ansible_system == 'Linux'
  notify: Restart_sshd
  tags: [ssh, base]

- name: Run block
  when: [ssh_user_ca_enabled | default(True), ssh_user_ca_key_file | default("") | length > 0]
  tags: [ssh, base]
  block:
    - name: Add user CA key
      ansible.builtin.get_url:
        url: "{{ ssh_user_ca_key_url }}"
        dest: "{{ ssh_user_ca_key_file }}"
        owner: root
        group: root
        mode: "0644"

    - name: Enable user CA key
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: ^#?TrustedUserCAKeys
        line: TrustedUserCAKeys {{ ssh_user_ca_key_file }}
      notify: Restart_sshd

    - name: Add script to update ca cert
      ansible.builtin.template:
        src: fetch-ssh-user-ca.sh.j2
        dest: /usr/local/sbin/fetch-ssh-user-ca.sh
        owner: root
        group: root
        mode: "0750"

    - name: Schedule fetching cert
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: /etc/systemd/system/{{ item }}
        owner: root
        group: root
        mode: "0644"
      with_items: [fetch-ssh-user-ca.service, fetch-ssh-user-ca.timer]

    - name: Start and enable service
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      with_items: [fetch-ssh-user-ca.service, fetch-ssh-user-ca.timer]
