---
- name: Add group
  ansible.builtin.group:
    name: "{{ dufs_group }}"
    system: true
  tags: [dufs, dufs-install]

- name: Add user
  ansible.builtin.user:
    name: "{{ dufs_user }}"
    shell: /bin/false
    system: true
    groups: "{{ dufs_group }}"
  tags: [dufs, dufs-install]

- name: "Run tasks install-github.yml"
  ansible.builtin.include_tasks: install-github.yml
  vars:
    binary_name: dufs
    github_repo: sigoden/dufs
    service_name: dufs
  tags: [dufs, dufs-install, deps]

- name: "Validate config"
  tags: [dufs, dufs-configure]
  block:
    - name: "Remove 'tls-cert' if empty"
      ansible.builtin.set_fact:
        dufs_config: "{{ dufs_config | dict2items | rejectattr('key', 'eq', 'tls-cert') | list | items2dict }}"
      when: not dufs_tls_cert

    - name: "Remove 'tls-key' if empty"
      ansible.builtin.set_fact:
        dufs_config: "{{ dufs_config | dict2items | rejectattr('key', 'eq', 'tls-key') | list | items2dict }}"
      when: not dufs_tls_key

- name: "Add systemd service"
  ansible.builtin.template:
    src: "dufs@.service.j2"
    dest: "/etc/systemd/system/{{ dufs_service_name }}@.service"
    owner: "root"
    group: "root"
    mode: "0644"
  register: _dufs_systemd
  tags: [dufs, dufs-configure]

- name: Block
  tags: [dufs, dufs-configure]
  when: dufs_identifier | default('') | length > 0
  block:
    - name: "Add dufs config"
      ansible.builtin.copy:
        content: "{{ dufs_config | to_nice_yaml(indent=2) }}"
        dest: "/etc/dufs-{{ dufs_identifier }}.yaml"
        owner: "root"
        group: "root"
        mode: "0644"
      register: _dufs_config

    - name: "Enable and start dufs service"
      ansible.builtin.systemd:
        name: "{{ dufs_service_name }}@{{ dufs_identifier }}"
        daemon_reload: true
        state: "{% if _dufs_config is changed %}restarted{% else %}started{% endif %}"
        enabled: true
      when: _dufs_systemd is changed or _dufs_config is changed
