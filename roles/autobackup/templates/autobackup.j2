#!/bin/sh

ROOT_DIR="{{ autobackup_root_dir }}"
MAX_AGE_DAYS={{ autobackup_retention_days | default(14) }}

START_TIME="$(date +%s)"

if [ ! -d "${ROOT_DIR}" ]; then
    echo "${ROOT_DIR} does not exist"
    exit 1
fi

function get_backups() {
    if [ ! -z ${1} ]; then
        find ${1} -mindepth 1 -type f -mtime -1
    fi
}

function upload() {
    cd "${ROOT_DIR}"
    for dir in "${ROOT_DIR}"/*/; do
        CNT=$(get_backups ${dir} | wc -l)
        echo "autobackup_found_files_total{dir="$(basename ${dir})"} $CNT"
        if [ ${CNT} -gt 0 ]; then
            TRANSFERRED=0
            while IFS= read -r file; do
                if [ ! -z ${file} ]; then
                    /usr/local/bin/autobackup-impl-{{ autobackup_impl }} ${file} ${dir} && ((++TRANSFERRED)); 
                fi
            done <<<$(get_backups ${dir})
            echo "autobackup_uploaded_files_total{dir="$(basename ${dir})"} ${TRANSFERRED}"

            ERRORS=$((CNT - TRANSFERRED))
            echo "autobackup_upload_errors_total{dir="$(basename ${dir})"} ${ERRORS}"
        fi
    done
}

function delete() {
    for dir in "${ROOT_DIR}"/*/; do
        CNT=$(find ${dir} -mindepth 1 -type f -mtime +${MAX_AGE_DAYS} | wc -l)
        echo "autobackup_expired_files_total{dir="$(basename ${dir})"} $CNT"
        if [ ${CNT} -gt 0 ]; then
            find ${dir} -mindepth 1 -type f -mtime +${MAX_AGE_DAYS} -exec echo delete \;
            if [ $? -eq 0 ]; then
                SUCCESS=1
            else
                SUCCESS=0
            fi
            echo "autobackup_expiration_successful{dir="$(basename ${dir})"} ${SUCCESS}"
        fi
    done
}

function run() {
    upload
    delete
    echo "autobackup_last_run_timestamp $(date +%s)"
    NOW=$(date +%s)
    echo "autobackup_total_runtime_seconds $((NOW - START_TIME))"
}

run | sponge 
