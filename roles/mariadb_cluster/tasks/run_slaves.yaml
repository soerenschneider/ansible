---
- name: Run slaves
  community.docker.docker_container:
    name: "{{ mariadb_cluster_container_name }}"
    image: "{{ mariadb_cluster_image }}"
    user: "{{ _mariadb_cluster_user_string }}"
    restart_policy: always
    networks:
      - name: "{{ mariadb_cluster_docker_network }}"
    log_driver: journald
    ports: [0.0.0.0:3306:3306, 0.0.0.0:4444:4444, 0.0.0.0:4567:4567, 0.0.0.0:4568:4568]
    command: |
      --wsrep-cluster-address={{ mariadb_cluster_galera_cluster_address }}
    env_file: "{{ mariadb_cluster_base_dir }}/env"
    volumes: ["{{ mariadb_cluster_certs_dir }}:/certs:ro", "{{ mariadb_cluster_storage_dir }}:/var/lib/mysql:Z", "/var/lib/mariadb/my.cnf:/etc/mysql/conf.d/galera.cnf"]
  tags: [docker, mariadb, mysql]

- name: Wait for slaves to be ready (2 consecutive pings)
  ansible.builtin.shell: |
    success_count=0
    max_attempts=600
    attempt=0
    while [ $attempt -lt $max_attempts ]; do
      if docker exec {{ mariadb_cluster_container_name }} mariadb-admin ping --ssl-verify-server-cert=false -u{{ mariadb_cluster_root_user | default('root') }} -p{{ mariadb_cluster_root_password }} >/dev/null 2>&1; then
        success_count=$((success_count + 1))
        echo "Ping successful ($success_count/2)"
        if [ $success_count -ge 2 ]; then
          echo "Two consecutive pings successful!"
          exit 0
        fi
      else
        success_count=0
        echo "Ping failed, resetting counter"
      fi
      attempt=$((attempt + 1))
      sleep 1
    done
    echo "Max attempts reached without 2 consecutive successes"
    exit 1
  changed_when: false
  no_log: true
  tags: [mariadb]
